"""Initial production schema

Revision ID: 000000000001
Revises: 
Create Date: 2025-09-06 10:15:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '000000000001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create users table
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('totp_secret_encrypted', sa.LargeBinary(), nullable=True),
    sa.Column('backup_codes_hash', sa.Text(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('mfa_passed', sa.Boolean(), nullable=False),
    sa.Column('mfa_setup_completed', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('login_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_mfa_attempts', sa.Integer(), nullable=False),
    sa.Column('mfa_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # Create categories table
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('slug', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index('ix_categories_display_order', ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_categories_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_categories_slug'), ['slug'], unique=True)

    # Create posts table
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('slug', sa.String(length=220), nullable=False),
    sa.Column('content_blocks', sa.JSON(), nullable=True),
    sa.Column('excerpt', sa.String(length=300), nullable=True),
    sa.Column('image_data', sa.LargeBinary(), nullable=True),
    sa.Column('image_mime', sa.String(length=100), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_posts_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_posts_slug'), ['slug'], unique=True)

    # Create projects table
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_image_url', sa.String(length=300), nullable=True),
    sa.Column('project_title', sa.String(length=200), nullable=False),
    sa.Column('project_description', sa.Text(), nullable=True),
    sa.Column('project_url', sa.String(length=300), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_projects_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_projects_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_projects_user_id'), ['user_id'], unique=False)

    # Create resume_skills table
    op.create_table('resume_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_title', sa.String(length=120), nullable=False),
    sa.Column('skill_description', sa.Text(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('resume_skills', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_resume_skills_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_resume_skills_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_resume_skills_user_id'), ['user_id'], unique=False)

    # Create work_history table
    op.create_table('work_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('work_history_image_url', sa.String(length=300), nullable=True),
    sa.Column('work_history_company_name', sa.String(length=200), nullable=False),
    sa.Column('work_history_dates', sa.String(length=120), nullable=False),
    sa.Column('work_history_role', sa.String(length=200), nullable=False),
    sa.Column('work_history_role_description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('work_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_work_history_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_history_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_work_history_user_id'), ['user_id'], unique=False)

    # Create work_accomplishments table
    op.create_table('work_accomplishments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('work_history_id', sa.Integer(), nullable=False),
    sa.Column('accomplishment_text', sa.Text(), nullable=False),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['work_history_id'], ['work_history.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('work_accomplishments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_work_accomplishments_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_work_accomplishments_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_work_accomplishments_work_history_id'), ['work_history_id'], unique=False)

    # Create certifications table
    op.create_table('certifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('certification_image_url', sa.String(length=300), nullable=True),
    sa.Column('certification_title', sa.String(length=200), nullable=False),
    sa.Column('certification_description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('certifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_certifications_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_certifications_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_certifications_user_id'), ['user_id'], unique=False)

    # Create professional_development table
    op.create_table('professional_development',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('professional_development_image_url', sa.String(length=300), nullable=True),
    sa.Column('professional_development_title', sa.String(length=200), nullable=False),
    sa.Column('professional_development_description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('professional_development', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_professional_development_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_professional_development_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_professional_development_user_id'), ['user_id'], unique=False)

    # Create education table
    op.create_table('education',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hex_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('education_image_url', sa.String(length=300), nullable=True),
    sa.Column('education_title', sa.String(length=200), nullable=False),
    sa.Column('education_description', sa.Text(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('education', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_education_display_order'), ['display_order'], unique=False)
        batch_op.create_index(batch_op.f('ix_education_hex_id'), ['hex_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_education_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('education')
    op.drop_table('professional_development')
    op.drop_table('certifications')
    op.drop_table('work_accomplishments')
    op.drop_table('work_history')
    op.drop_table('resume_skills')
    op.drop_table('projects')
    op.drop_table('posts')
    op.drop_table('categories')
    op.drop_table('users')
    # ### end Alembic commands ###
